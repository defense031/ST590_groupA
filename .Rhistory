knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
poke <- fromJSON("https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json",simplifyDataFrame = TRUE)
Pokedf <- poke$pokemon
library(dplyr)
library(ggplot2)
library(tidyr)
PokeCandy<-group_by(Pokedf,candy)%>%mutate(AvgSpawnChance=mean(spawn_chance))
select(PokeCandy, name, candy, AvgSpawnChance)
getTypes <- function(df){
type1 <- (unlist(df[5])[1])
type2 <- (unlist(df[5])[2])
Typesdf <- c(type1,type2)
}
newCols <-apply(Pokedf,1,getTypes)
newCols[is.na(newCols)] <- 0
newCols <- t(newCols)
colnames(newCols) <- c("type1","type2")
Pokedf <- cbind(Pokedf,newCols)
Pokedf <- data.frame(lapply(Pokedf,as.character),stringsAsFactors = FALSE)
table(Pokedf$type1,Pokedf$type2)
avgSpawnSummary = c()
typevector <- c("Normal","Grass","Flying","Poison","Electric","Ground","Fire","Water","Dragon","Ice","Ghost","Psychic","Rock","Bug","Fighting")
for (i in typevector){
avgSpawnSummary <- c(avgSpawnSummary,(summary(as.numeric((filter(Pokedf,(type1==i)|(type2==i)))$avg_spawns))))}
avgSpawnSummary <- cbind(typevector,(matrix(avgSpawnSummary, ncol = 6, byrow = TRUE)))
colnames(avgSpawnSummary) <- c("Type","Min.","1st Qu.","Median","Mean","3rd Qu.","Max.")
#Create list of unique types
types<-unique(Pokedf$type1)
#Initialize dataframe to capture mean values
sumData<-data.frame(matrix(ncol=14,nrow=1))
colnames(sumData)<-as.character(types)
#Find mean spawn chance for each type
for (i in types){
newDF<-filter(Pokedf,(type1==i)|(type2==i))
sumData[i]<-mean(as.numeric(newDF$spawn_chance))
}
as_tibble(sumData)
dfAvgSpawnSummary<-as.data.frame(avgSpawnSummary)
p<-ggplot(dfAvgSpawnSummary, aes(x=Type, y=Mean))
p+geom_bar(stat="identity", fill="blue")+
labs(x="Type", title="Barplot of mean average spawns by pokemon type")+
ylab("Mean of average spawns")+
theme(axis.text.x=element_text(angle=90))
b<-ggplot(PokeCandy, aes(x=candy, y=spawn_chance))
b+geom_boxplot(fill="gold1")+
geom_jitter()+
labs(x="Candy Type", title="Boxplot of spawn chance by candy type")+
ylab("Spawn Chance")+
theme(axis.text.x=element_text(angle=90,hjust=1, vjust=0.5))
ggplot(Pokedf, aes(x = (as.numeric(gsub("kg","",Pokedf[,7]))), y = (as.numeric(gsub("m","",Pokedf[,6]))),color = type1)) + geom_point()+labs(x="weight (kg)",y="height (m)",color = "Main Type", title = "Pokemon Height and Weight with Primary Typing")
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
digital <- fromJSON("https://www4.stat.ncsu.edu/~post/558/datasets/russian_ads.json",simplifyDataFrame = TRUE)
View(digital)
View(poke)
View(Pokedf)
View(digital)
View(poke)
View(digital)
View(poke)
View(digital)
help("fromJSON")
str(digital)
str(digital$language_categories)
help(tbl)
library(jsonlite)
digital <- fromJSON("https://www4.stat.ncsu.edu/~post/558/datasets/russian_ads.json",simplifyDataFrame = TRUE)
digital <- tbl_df(digital)
help(tbl_df)
library(jsonlite)
library(dplyr)
digital <- fromJSON("https://www4.stat.ncsu.edu/~post/558/datasets/russian_ads.json",simplifyDataFrame = TRUE)
digital <- tbl_df(digital)
digital
View(digital)
str(digital$interests_categories)
attributes(digital$interests_categories)
attributes(digital$interests_categories, "level")
attributes(digital$interests_categories, "levels")
attributes(digital$interests_categories, "label")
attr(digital$interests_categories)
attr(digital$interests_categories, "levels")
View(Pokedf)
